package ed448

import (
	. "gopkg.in/check.v1"
)

func (s *Ed448Suite) Test_PointFromNonUniformHash(c *C) {
	ser := [56]byte{
		0x0d, 0xc3, 0x50, 0x83, 0xbd, 0x0d, 0x55, 0xd3, 0xdd, 0x8c, 0x50, 0x28, 0x1c, 0x32, 0x77, 0x7e, 0x62, 0x03, 0x82, 0xa3, 0x18, 0x72, 0xc1, 0x7b, 0xc2, 0x69, 0x11, 0xb7, 0x34, 0xbd, 0x2b, 0xc4, 0x26, 0x3b, 0x82, 0xc2, 0x12, 0x3c, 0x2a, 0x3c, 0xe7, 0x49, 0x3c, 0x21, 0xfb, 0xb2, 0xb5, 0xe2, 0x41, 0xa8, 0xce, 0xa6, 0xb7, 0xf1, 0xc1, 0x3f,
	}

	exp := &twExtendedPoint{
		&bigNumber{
			0x0fccc409, 0x0cb70a60, 0x0f0570ae, 0x0e5ba490,
			0x036900ef, 0x0280675c, 0x02f3f4dd, 0x095c4969,
			0x07cd2085, 0x0d7db7ba, 0x0287bde4, 0x0f8b758e,
			0x0a29856a, 0x0a99eca2, 0x02b53be5, 0x0c531e86,
		},
		&bigNumber{
			0x04650aac, 0x0b984b48, 0x04b3deb4, 0x001f7c40,
			0x05766713, 0x0938ae1c, 0x014e14aa, 0x023088a8,
			0x02a3d97a, 0x0fc23e90, 0x0d9b4f23, 0x09a3bef4,
			0x0df20d8e, 0x0cd9cc1d, 0x0b76a0d7, 0x048ad86d,
		},
		&bigNumber{
			0x0cb1854c, 0x0f29cb25, 0x03159292, 0x02101752,
			0x0bc095c5, 0x013ccc0a, 0x07058e53, 0x07b77b37,
			0x05316c77, 0x0aa930cd, 0x02a179e8, 0x04a4fca6,
			0x0e91a389, 0x01593de7, 0x0ff691f7, 0x0623b4c1,
		},

		&bigNumber{
			0x0db8f076, 0x08d3975c, 0x0588fe54, 0x0be4d1a5,
			0x0a6a76a8, 0x0dd356fd, 0x00a48d5a, 0x08223f98,
			0x018db412, 0x098caf5d, 0x07bd2c1e, 0x0bec3e27,
			0x02475d99, 0x00db8d59, 0x049cfb8c, 0x07b976cc,
		},
	}
	p := pointFromNonUniformHash(ser)
	c.Assert(p.x, DeepEquals, exp.x)
	c.Assert(p.y, DeepEquals, exp.y)
	c.Assert(p.z, DeepEquals, exp.z)
	c.Assert(p.t, DeepEquals, exp.t)
}
